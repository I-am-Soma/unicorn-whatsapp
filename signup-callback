app.post('/signup-callback', async (req, res) => {
  const { userId, email } = req.body;

  try {
    // 1. Insertar usuario en la tabla `users` si no existe
    const { data: existingUser, error: findError } = await supabase
      .from('users')
      .select('id')
      .eq('id', userId)
      .maybeSingle();

    if (findError) throw findError;

    if (!existingUser) {
      const { error: insertUserError } = await supabase
        .from('users')
        .insert({
          id: userId,
          nombre: email,
          rol: 'cliente',
          created_at: new Date().toISOString()
        });

      if (insertUserError) throw insertUserError;
    }

    // 2. Insertar en `clientes` (ya garantizado que el user_id existe)
    const { error: insertClienteError } = await supabase
      .from('clientes')
      .insert({
        user_id: userId,
        nombre: email,
        prompt_inicial: 'You are a virtual assistant for this user.',
        lista_servicios: '',
        numero_whatsapp: '',
        created_at: new Date().toISOString()
      });

    if (insertClienteError) throw insertClienteError;

    res.status(200).json({ message: 'Cliente creado correctamente' });
  } catch (err) {
    console.error('‚ùå Error en signup-callback:', err);
    res.status(500).json({ error: 'Error creando usuario o cliente' });
  }
});
